"=========================================================================
"                                 ~My vimrc~
"=========================================================================
"
" Author:       Ryan Huber
"
"-------------------------------------------------------------------------
"
set nocompatible

"-------------------------------------------------------------------------
" Plugin Setup
"-------------------------------------------------------------------------
call plug#begin('~/.vim/plugged')

"Fuzzyfinder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
"Plug 'stsewd/fzf-checkout.vim'

" Cheat.sh
"Plug 'dbeniamine/cheat.sh-vim'

"file navigation
" Plug 'francoiscabrol/ranger.vim'

"Statusline
Plug 'itchyny/lightline.vim'
Plug 'edkolev/tmuxline.vim'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'maximbaz/lightline-ale'
"Plug 'ryanoasis/vim-devicons'
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'
"Plug 'vim-scripts/buftabline'

"Undo
Plug 'simnalamburt/vim-mundo'

"Search
Plug 'haya14busa/is.vim'
Plug 'haya14busa/vim-asterisk'
Plug 'osyo-manga/vim-anzu'

"Colorschemes
Plug 'flazz/vim-colorschemes'
"Plug 'trevordmiller/nova-vim'
"Plug 'drewtempelmeyer/palenight.vim'
"Plug 'haishanh/night-owl.vim'

Plug 'mhinz/vim-startify'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/gv.vim'
Plug 'machakann/vim-sandwich'
"Plug 'tpope/vim-vinegar'
"Plug 'airblade/vim-gitgutter'
"Plug 'mhinz/vim-signify'
"Plug 'jlanzarotta/bufexplorer'
"Plug 'tpope/vim-surround'

"Snippets
" Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

"Syntax
Plug 'othree/html5.vim'
Plug 'hail2u/vim-css3-syntax'
Plug 'Quramy/vim-js-pretty-template'
Plug 'digitaltoad/vim-pug'
Plug 'pangloss/vim-javascript'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'jparise/vim-graphql'
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'posva/vim-vue'
Plug 'elixir-lang/vim-elixir'
Plug 'toyamarinyon/vim-swift'
Plug 'keith/swift.vim'
Plug 'lervag/vimtex'
Plug 'rescript-lang/vim-rescript'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

"Linting/Fixing
Plug 'w0rp/ale'
Plug 'prettier/vim-prettier'

"Language-server
" Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal
"
"-------------------------------------------------------------------------

colorscheme jellybeans


let g:tex_flavor='latex'
let g:tex_conceal='abdmg'

" Javascript Syntax Formatting
let g:javascript_plugin_flow = 1
let g:used_javascript_libs = 'underscore,react,jasmine,chai,d3,ramda,vue'
set concealcursor=nc
set conceallevel=1
let g:jsx_ext_required = 0
" let g:javascript_conceal_null       = "ø"
" let g:javascript_conceal_this       = "@"
" let g:javascript_conceal_return     = "⇚"
" let g:javascript_conceal_undefined  = "¿"
" let g:javascript_conceal_NaN        = "ℕ"
" let g:javascript_conceal_prototype  = "¶"
" let g:javascript_conceal_static     = "•"
let g:vim_jsx_pretty_colorful_config = 1


if &diff
    set diffopt-=internal
    set diffopt+=vertical
endif
set hidden
set shell=bash

set showtabline=2
set modelines=0
set vb "flash screen rather than sound bell
set laststatus=2 " Always display the statusline in all windows
set list " show trailing whiteshace and tabs
"set listchars=eol:↲,tab:▶▹,nbsp:␣,extends:…,trail:•
set listchars=tab:▸\ ,extends:>,precedes:<,nbsp:+,trail:•
set mouse=a
set wildmenu
set showtabline=2

set scrolloff=4
set autoindent
set cursorline
set backspace=indent,eol,start
set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)
set number
set relativenumber
set lazyredraw
set regexpengine=1
set hlsearch
set incsearch
set ignorecase
set smartcase
set linebreak
set textwidth=80

set clipboard=unnamed

" Tabs
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2

" Formatting
syntax on
set noswapfile
set splitright
set splitbelow

let g:javascript_plugin_flow = 1
let g:go_doc_popup_window = 1

autocmd BufRead,BufNewFile .{jscs,jshint,eslint,babel}rc set filetype=json
autocmd BufRead,BufNewFile *.prisma set syntax=graphql
autocmd InsertEnter * setlocal conceallevel=2 concealcursor=nc
autocmd InsertLeave * setlocal conceallevel=2 concealcursor=inc
autocmd BufWritePre *.js,*.json,*.css,*.scss,*.less,*.graphql ALEFix
autocmd BufRead,BufNewFile *.json setlocal conceallevel=2 concealcursor=nc

augroup VimCSS3Syntax
  autocmd!
  autocmd FileType css setlocal iskeyword+=-
augroup END

" set background=dark
highlight clear SignColumn
highlight CursorLineNr cterm=NONE ctermbg=NONE ctermfg=green
highlight cssIdentifier ctermfg=5
highlight cssClassName ctermfg=214

set concealcursor=nc
set conceallevel=2

hi comment cterm=italic
hi Special cterm=italic
hi htmlArg cterm=italic ctermfg=214
hi jsxAttrib cterm=italic ctermfg=214

" Functions
" Show keyword for formatting of text under cursor
function! <SID>SynStack()
    if !exists("*synstack")
        return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
if has("gui_running")
"tell the term has 256 colors
  set t_Co=256
end

" CONFIGS
"-------------------------------------------------------------------------
source ~/.vim/configs/keymaps.vim
" source ~/.vim/configs/ranger.vim
source ~/.vim/configs/lightline.vim
source ~/.vim/configs/search.vim
source ~/.vim/configs/startify.vim
source ~/.vim/configs/undo.vim
source ~/.vim/configs/ultisnips.vim
" source ~/.vim/configs/coc.vim
source ~/.vim/configs/ale.vim

highlight ALEErrorSign ctermbg=NONE ctermfg=124
hi SpellBad guifg=NONE guibg=NONE gui=undercurl ctermbg=NONE ctermfg=NONE cterm=bold,underline
highlight ALEWarningSign ctermbg=NONE ctermfg=11
hi SpellCap guifg=NONE guibg=NONE gui=undercurl ctermbg=NONE ctermfg=NONE cterm=bold,underline
